{"version":3,"sources":["serviceWorker.js","redux/appReducer.js","redux/store.js","utils/validators/validators.jsx","components/Product/Product.js","components/shared/CustomFIeld/CustomField.js","components/ProductCreator/ProductCreator.js","redux/appSelectors.js","App.js","index.js","components/shared/CustomFIeld/CustomField.module.scss"],"names":["Boolean","window","location","hostname","match","ADD_PRODUCT","REMOVE_PRODUCT","initialState","products","id","name","count","cost","totalCost","newProductId","appReducer","state","action","type","map","product","filter","sort","a","b","reducers","combineReducers","app","form","formReducer","store","applyMiddleware","save","namespace","thunkMiddleWare","createStore","createStoreWithMiddleware","load","__store__","max","useStyles","makeStyles","error","border","outline","boxShadow","cursor","transition","background","Product","removeProduct","changeProductCount","changeProductCost","classes","useState","isEditCount","setIsEditCount","isEditCost","setIsEditCost","isError","setIsError","useEffect","TableRow","key","TableCell","component","scope","align","className","onDoubleClick","onBlur","autoFocus","onKeyPress","e","isNaN","currentTarget","value","placeholder","IconButton","aria-label","onClick","onRemove","required","undefined","number","Number","CustomField","input","meta","touched","props","hasError","typeField","types","styles","max25","length","title","fontWeight","textTransform","margin","fontSize","padding","borderRadius","inputGroup","marginBottom","display","justifyContent","marginLeft","button","width","classError","color","ProductCreatorForm","reduxForm","handleSubmit","onSubmit","Field","validate","Button","variant","getAppProducts","getState","paper","maxWidth","table","minWidth","body","height","overflowY","empty","btn","connect","addNewProduct","values","dispatch","addProduct","reset","sortCountAscending","sortCostAscending","sortTotalCostAscending","data","TableContainer","Paper","Table","TableHead","TableBody","row","colSpan","reduce","acc","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message","module","exports"],"mappings":"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","file":"static/js/main.f3df32d7.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {reset} from 'redux-form';\r\n\r\nconst ADD_PRODUCT = 'shoppingBasket/ADD-PRODUCT';\r\nconst REMOVE_PRODUCT = 'shoppingBasket/REMOVE-PRODUCT';\r\nconst CHANGE_PRODUCT_COUNT = 'shoppingBasket/CHANGE-PRODUCT-COUNT';\r\nconst CHANGE_PRODUCT_COST = 'shoppingBasket/CHANGE-PRODUCT-COST';\r\nconst SORT_COUNT_ASCENDING  = 'shoppingBasket/SORT-COUNT-ASCENDING';\r\nconst SORT_COST_ASCENDING  = 'shoppingBasket/SORT-COST-DESCENDING';\r\nconst SORT_TOTAL_COST_ASCENDING  = 'shoppingBasket/SORT-TOTAL-COST-DESCENDING';\r\n\r\n\r\n\r\nconst initialState = {\r\n    products: [\r\n        {id: 1, name: 'Alcatel', count: 3, cost: 30, totalCost: null},\r\n        {id: 2, name: 'Nokia', count: 9, cost: 20, totalCost: null},\r\n        {id: 3, name: 'Siemens C65', count: 2, cost: 80, totalCost: null},\r\n    ],\r\n    newProductId: 0,\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_PRODUCT:\r\n            state.products.map(product => {\r\n                if (product.id > state.newProductId) {\r\n                    state.newProductId = product.id\r\n                }\r\n                return null\r\n            })\r\n            return {\r\n                ...state,\r\n                products: [\r\n                    ...state.products,\r\n                    {id: state.newProductId + 1, ...action}\r\n                ]\r\n            }\r\n        case REMOVE_PRODUCT:\r\n            return {\r\n                ...state,\r\n                products: state.products.filter(product => product.id !== action.id)\r\n            }\r\n\r\n        case CHANGE_PRODUCT_COUNT:\r\n            return {\r\n                ...state,\r\n                products: state.products.map(product => {\r\n                    if (product.id === action.id) {\r\n                        return {\r\n                            ...product,\r\n                            count: action.count,\r\n                            totalCost: product.cost * product.count\r\n                        }\r\n                    } else {\r\n                        return product\r\n                    }\r\n                })\r\n            }\r\n        case CHANGE_PRODUCT_COST:\r\n            return {\r\n                ...state,\r\n                products: state.products.map(product => {\r\n                    if (product.id === action.id) {\r\n                        return {\r\n                            ...product,\r\n                            cost: action.cost,\r\n                            totalCost: product.cost * product.count\r\n                        }\r\n                    } else {\r\n                        return product\r\n                    }\r\n                })\r\n            }\r\n        case SORT_COUNT_ASCENDING:{\r\n            return{\r\n                ...state,\r\n                products: state.products.sort((a,b) => {\r\n                    if (a.count > b.count) {    return 1; }\r\n                    if (a.count < b.count) {   return -1; }\r\n                    return 0;\r\n                })\r\n            }\r\n        } case SORT_COST_ASCENDING:{\r\n            return{\r\n                ...state,\r\n                products: state.products.sort((a,b) => {\r\n                    if (a.cost > b.cost) {    return 1; }\r\n                    if (a.cost < b.cost) {   return -1; }\r\n                    return 0;\r\n                })\r\n            }\r\n        }\r\n        case SORT_TOTAL_COST_ASCENDING: {\r\n            return {\r\n                ...state,\r\n                products: state.products.sort((a, b) => {\r\n                    if (a.totalCost > b.totalCost) { return 1; }\r\n                    if (a.totalCost < b.totalCost) { return -1; }\r\n                    return 0;\r\n                })\r\n            }\r\n        }\r\n        default:\r\n            return {\r\n                ...state,\r\n                products: state.products.map(product => {\r\n                    return {\r\n                        ...product,\r\n                        totalCost: product.cost * product.count\r\n                    }\r\n                })\r\n            }\r\n    }\r\n}\r\n// actionCreators\r\nexport const addProduct = ({name, count, cost}) => ({type: ADD_PRODUCT, name, count, cost})\r\nexport const removeProduct = (id) => ({type: REMOVE_PRODUCT, id})\r\nexport const changeProductCount = (id, count) => ({type: CHANGE_PRODUCT_COUNT, id, count})\r\nexport const changeProductCost = (id, cost) => ({type: CHANGE_PRODUCT_COST, id, cost})\r\nexport const sortCountAscending = () => ({type: SORT_COUNT_ASCENDING})\r\nexport const sortCostAscending = () => ({type: SORT_COST_ASCENDING})\r\nexport const sortTotalCostAscending = () => ({type: SORT_TOTAL_COST_ASCENDING})\r\n// thunk\r\nexport const addNewProduct = (values) => dispatch => {\r\n    dispatch(addProduct(values))\r\n    dispatch(reset('productCreator'))\r\n}\r\n\r\nexport default appReducer","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport appReducer from \"./appReducer\";\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport thunkMiddleWare from 'redux-thunk'\r\nimport {save, load} from \"redux-localstorage-simple\"\r\n\r\nconst reducers = combineReducers({\r\n    app: appReducer,\r\n    form: formReducer,\r\n})\r\n\r\nconst createStoreWithMiddleware = applyMiddleware(save({ namespace: \"altertech\" }),thunkMiddleWare)(createStore)\r\nconst store = createStoreWithMiddleware(reducers, load({ namespace: \"altertech\" }))\r\n// const store = createStore(reducers, applyMiddleware(thunkMiddleware, stateSaver))\r\nwindow.__store__ = store\r\n\r\nexport default store\r\n// {states: ['altertech']}","export const required = value => (value != null ? undefined : 'This field is required!')\r\nexport const number = value => value && isNaN(Number(value)) ? 'Must be a number' : undefined\r\nexport const maxLength = (max) => value => value.length > max ? `Max length of this message is ${max} characters` : undefined","import React, {useEffect, useState} from 'react'\r\nimport TableCell from \"@material-ui/core/TableCell\"\r\nimport TableRow from \"@material-ui/core/TableRow\"\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport {makeStyles} from \"@material-ui/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n    error: {\r\n        border: '3px solid red',\r\n        outline: 'none',\r\n        boxShadow: '0 0 4px red'\r\n    },\r\n    cursor: {\r\n        cursor: 'pointer',\r\n        transition: 'all .3s ease',\r\n        '&:hover': {\r\n            background: 'yellow'\r\n        }\r\n    }\r\n})\r\n\r\nconst Product = ({id, name, count, cost, totalCost, removeProduct, changeProductCount, changeProductCost}) => {\r\n    const classes = useStyles()\r\n    const {error, cursor} = classes\r\n\r\n    const [isEditCount, setIsEditCount] = useState(false)\r\n    const [isEditCost, setIsEditCost] = useState(false)\r\n    const [isError, setIsError] = useState(false)\r\n\r\n    useEffect(() => {\r\n        changeProductCount(id, count)\r\n        changeProductCost(id, cost)\r\n    }, [changeProductCount, count, changeProductCost, cost, id])\r\n\r\n    const onRemove = (id) => {\r\n        removeProduct(id)\r\n    }\r\n\r\n    const changeCount = (e) => {\r\n        if (e.key === 'Enter') {\r\n            if (!isNaN(+e.currentTarget.value)) {\r\n                changeProductCount(id, e.currentTarget.value)\r\n                setIsEditCount(false)\r\n            } else {setIsError(true)}\r\n        }\r\n    }\r\n    const changeCost = (e) => {\r\n        if (e.key === 'Enter') {\r\n            if (!isNaN(+e.currentTarget.value)) {\r\n                changeProductCost(id, +e.currentTarget.value)\r\n                setIsEditCost(false)\r\n            } else {setIsError(true)}\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <TableRow key={id}>\r\n            <TableCell component=\"th\"\r\n                       scope=\"row\">\r\n                {name}\r\n            </TableCell>\r\n            <TableCell align=\"right\"\r\n                       className={cursor}\r\n                       onDoubleClick={() => {\r\n                           setIsEditCount(true)\r\n                           setIsError(false)\r\n                       }}\r\n                       onBlur={() => {\r\n                           setIsEditCount(false)\r\n                       }}\r\n\r\n            >\r\n                {!isEditCount && count}\r\n                {isEditCount && <input className={(isError && error) || ''}\r\n                                       type=\"text\"\r\n                                       autoFocus={true}\r\n                                       onKeyPress={changeCount}\r\n                                       placeholder={count}\r\n                />}\r\n            </TableCell>\r\n            <TableCell align=\"right\"\r\n                       className={cursor}\r\n                       onDoubleClick={() => {\r\n                           setIsEditCost(true)\r\n                           setIsError(false)\r\n                       }}\r\n                       onBlur={() => {\r\n                           setIsEditCost(false)\r\n                       }}\r\n\r\n            >\r\n                {!isEditCost && cost}\r\n                {isEditCost && <input className={(isError && error) || ''}\r\n                                      type=\"text\"\r\n                                      autoFocus={true}\r\n                                      onKeyPress={changeCost}\r\n                                      placeholder={cost}\r\n                />}\r\n            </TableCell>\r\n            <TableCell align=\"right\">\r\n                {totalCost}\r\n            </TableCell>\r\n            <TableCell align=\"right\">\r\n                <IconButton aria-label=\"delete\"\r\n                            onClick={() => {\r\n                                onRemove(id)\r\n                            }}\r\n                >\r\n                    <DeleteIcon/>\r\n                </IconButton>\r\n            </TableCell>\r\n        </TableRow>\r\n    )\r\n}\r\n\r\nexport default Product","import React from 'react'\r\nimport styles from './CustomField.module.scss'\r\n\r\nconst CustomField = ({input,meta, meta: {touched, error}, ...props}) => {\r\n    const hasError = touched && error\r\n    const typeField = props.types\r\n    const {id} = props\r\n    return (\r\n        <div className={`${styles['custom-field']} ${hasError ? styles.error : ''}`}>\r\n            {typeField === 'input' && <input {...input} {...props} className={styles.input} id={id}/>}\r\n            {!typeField && <span> </span>}\r\n\r\n            {hasError && <div>{error}</div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport  default  CustomField","import React from 'react'\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {makeStyles} from \"@material-ui/styles\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLength, number, required} from \"../../utils/validators/validators\";\r\nimport CustomField from \"../shared/CustomFIeld/CustomField\";\r\n\r\nconst max25 = maxLength(15)\r\n\r\nconst useStyles = makeStyles({\r\n    title: {\r\n        fontWeight: 'bold',\r\n        textTransform: 'uppercase',\r\n        margin: '0 0 40px 0',\r\n        fontSize: 20\r\n    },\r\n    form: {\r\n        padding: 40,\r\n        background: 'aqua',\r\n        borderRadius: 10,\r\n        boxShadow: '0 0 10px gray'\r\n    },\r\n    inputGroup: {\r\n        marginBottom: 20,\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    },\r\n    input: {\r\n        marginLeft: 10,\r\n        borderRadius: 8,\r\n        border: '1px solid black',\r\n        padding: '6px 15px'\r\n    },\r\n    button: {\r\n        width: '100%'\r\n    },\r\n    classError: {\r\n        color: 'red',\r\n        textTransform: 'uppercase',\r\n        padding: 10\r\n    }\r\n});\r\n\r\n\r\nconst ProductCreator = ({handleSubmit, error}) => {\r\n    const classes = useStyles()\r\n    const {inputGroup, input, button, form, classError, title} = classes\r\n\r\n    return (\r\n        <>\r\n            <form className={form} onSubmit={handleSubmit}>\r\n                <p className={title}>Product creator</p>\r\n                {error && <div className={classError}> </div>}\r\n                <div className={inputGroup}>\r\n                    Product name:\r\n                    <Field className={input}\r\n                           type=\"text\"\r\n                           placeholder='Product name'\r\n                           name='name'\r\n                           component={CustomField}\r\n                           validate={[required, max25]}\r\n                           types='input'\r\n                    />\r\n                </div>\r\n                <div className={inputGroup}>\r\n                    Product count:\r\n                    <Field className={input}\r\n                           type=\"text\"\r\n                           placeholder='Product count'\r\n                           name='count'\r\n                           component={CustomField}\r\n                           validate={[required, number]}\r\n                           types='input'\r\n                    />\r\n                </div>\r\n                <div className={inputGroup}>\r\n                    Product cost:\r\n                    <Field className={input}\r\n                           type=\"text\"\r\n                           placeholder='Product cost'\r\n                           name='cost'\r\n                           component={CustomField}\r\n                           validate={[required, number]}\r\n                           types='input'\r\n                    />\r\n                </div>\r\n                <Button className={button}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        type='submit'\r\n                >Add product</Button>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nconst ProductCreatorForm = reduxForm({form: 'productCreator'})(ProductCreator)\r\n\r\n\r\nexport default ProductCreatorForm","export const getAppProducts = (state) => state.app.products;\r\nexport const getState = (state) => state.app;","import React  from 'react';\nimport './App.css';\nimport {connect} from \"react-redux\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport Table from \"@material-ui/core/Table\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport {makeStyles} from \"@material-ui/styles\";\nimport {Paper} from \"@material-ui/core\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Product from \"./components/Product/Product\";\nimport ProductCreatorForm from \"./components/ProductCreator/ProductCreator\";\nimport {\n    addNewProduct,\n    changeProductCost,\n    changeProductCount,\n    removeProduct, sortCostAscending, sortCountAscending, sortTotalCostAscending,\n} from \"./redux/appReducer\";\nimport {getAppProducts, getState} from \"./redux/appSelectors\";\n\nconst useStyles = makeStyles({\n    title: {\n        fontWeight: 'bold',\n        textTransform: 'uppercase',\n        margin: '25px 0 20px 0',\n        fontSize: 20\n    },\n    paper: {\n        maxWidth: 650,\n        boxShadow: '0 0 10px gray'\n    },\n    table: {\n        minWidth: 650,\n    },\n    body: {\n        height: '160px',\n        overflowY: 'auto',\n    },\n    empty: {\n        display: 'none'\n    },\n    btn:{\n        transition: 'all .3s ease',\n       '&:hover':{\n           cursor: 'pointer',\n           background: 'gray'\n       }\n    }\n});\n\n\nconst App = (props) => {\n    const {products, addNewProduct, removeProduct, changeProductCount,\n        changeProductCost, sortCountAscending, sortCostAscending, sortTotalCostAscending} = props\n    const classes = useStyles()\n    const {title, paper, table, body, empty, btn} = classes\n\n\n    const onSubmit = (data) => {\n        addNewProduct(data)\n    }\n    return (\n        <div className=\"App\">\n            <ProductCreatorForm onSubmit={onSubmit}/>\n            <div className=\"shopBasket\">\n                <TableContainer className={paper}\n                                component={Paper}\n                >\n                    <p className={title}>Shopping basket</p>\n                    <Table className={table}\n                           aria-label=\"simple table\"\n                    >\n                        <TableHead>\n                            <TableRow>\n                                <TableCell className={btn}\n\n                                >\n                                    Name</TableCell>\n                                <TableCell className={btn}\n                                           align=\"right\"\n                                           onClick={()=> {sortCountAscending()}}\n                                >Count</TableCell>\n                                <TableCell className={btn}\n                                           align=\"right\"\n                                           onClick={()=>{sortCostAscending()}}\n                                >Cost for 1</TableCell>\n                                <TableCell className={btn}\n                                           align=\"right\"\n                                           onClick={()=>{sortTotalCostAscending()}}\n                                >Total Cost</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody className={body}>\n                            {products.map((row) =>\n                                <Product {...row}\n                                         key={row.id}\n                                         removeProduct={removeProduct}\n                                         changeProductCount={changeProductCount}\n                                         changeProductCost={changeProductCost}\n                                />)}\n                        </TableBody>\n                        <tfoot>\n                        <TableRow>\n                            <TableCell colSpan={1}><span className={empty}>empty</span></TableCell>\n                            <TableCell colSpan={2}><b>Total Price</b></TableCell>\n                            <TableCell align=\"right\"> <b>\n                                {products.reduce((acc, {totalCost}) => (acc + totalCost), 0)}\n                            </b></TableCell>\n                        </TableRow>\n                        </tfoot>\n                    </Table>\n                </TableContainer>\n            </div>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => ({\n    products: getAppProducts(state),\n    state: getState(state)\n})\nexport default connect(mapStateToProps, {addNewProduct, removeProduct,\n    changeProductCount, changeProductCost, sortCountAscending, sortCostAscending, sortTotalCostAscending})(App);\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./redux/store\";\nimport {Provider} from \"react-redux\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"custom-field\":\"CustomField_custom-field__1cchg\",\"error\":\"CustomField_error__355yU\"};"],"sourceRoot":""}